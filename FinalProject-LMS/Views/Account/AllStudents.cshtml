@model IEnumerable<FinalProject_LMS.ViewModels.AllStudentsView>

@{
    ViewBag.Title = "AllStudents";
}

<h2>AllStudents</h2>


<div class="navbar-right" style="margin-top:8px; margin-right:50px">
    @using (Html.BeginForm("SearchStudents", "Account", FormMethod.Get))
    {
        <ul class="nav navbar-nav">
            <li>@Html.TextBox("searchName", null, new { @Placeholder = "Name.." })</li>
            <li><input type="submit" value="Search" /></li>
        </ul>
    }
</div>







<table class="table">
    <tr>



        <th>
            <a id="linkId" href="@Url.Action("AllStudents", "Account", new { SortOn = "Name" , Assending = true, searchName= ""})"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a>
            <a href="@Url.Action("AllStudents", "Account", new { SortOn = "Name" , Assending = false})"><i class="glyphicon glyphicon-sort-by-alphabet-alt"></i></a>
            @Html.DisplayNameFor(model => model.Name)


        </th>
        <th>
            <a href="@Url.Action("AllStudents", "Account", new { SortOn = "Email" , Assending = true, searchName= ""})"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a>
            <a href="@Url.Action("AllStudents", "Account", new { SortOn = "Email" , Assending = false})"><i class="glyphicon glyphicon-sort-by-alphabet-alt"></i></a>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            <a href="@Url.Action("AllStudents", "Account", new { SortOn = "CourseId" , Assending = true, searchName= ""})"><i class="glyphicon glyphicon-sort-by-alphabet"></i></a>
            <a href="@Url.Action("AllStudents", "Account", new { SortOn = "CourseId" , Assending = false})"><i class="glyphicon glyphicon-sort-by-alphabet-alt"></i></a>
            @Html.DisplayNameFor(model => model.CourseName)
        </th>


        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit",  new { id = item.Id }, null) |
                @Html.ActionLink("Details", "Details", new {  id=item.Id}, null) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
    }

</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryval")

}